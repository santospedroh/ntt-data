
# Definie o nome da pipeline
name: Post-it App

# Evento que vai disparar o Job
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
# Dependencias e Testes                                                         #
#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
  job1:
    name: Install dependencies and Unit Tests
    runs-on: ubuntu-latest

    # Checkout código fonte
    steps:
    - uses: actions/checkout@v2

    # Instalação Python3
    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: '3.10.16'

    # Cria virtual env Python
    - name: Create and start virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    # Instalação de Módulos que são necessários para a Aplicação. 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # Executa scripts de teste.
    - name: Execute tests
      run: |
        pip install pytest
        pip install pytest-cov
        pip install coverage
        coverage run test.py 
        coverage report app.py
        coverage xml app.py
      
    # Checkin código fonte
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v4
      with:
        name: python-app
        path: |
          . 
          !venv/

###-- END Job1 ---###

#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
# Teste de Qualidade SonarCloud                                                 #
#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
  job2:
    needs: job1    
    name: Quality Test SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

###-- END Job2 ---###


#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
# Aprovação antes do Deploy                                                     #
#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
  job3:
    needs: job2
    name: Manual Approval Before Deploy
    runs-on: ubuntu-latest
    environment:
      name: production  # Defina o ambiente que precisa de aprovação
    steps:
    - name: Wait for manual approval
      run: |
        echo "Aguardando aprovação manual para o deploy."

###-- END Approval ---###

#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
# Deploy Railway                                                                #
#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#


###-- END Job2 ---###

  job4:
    needs: job3
    name: Deploy Railway
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    env:
      SVC_ID: ntt-data
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: railway up --service=${{ env.SVC_ID }}

###-- END Job3 ---###